version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    container_name: weather-backend
    platform: linux/amd64
    environment:
      - PORT=3000
      - NODE_ENV=production
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - weather-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    container_name: weather-frontend
    platform: linux/amd64
    environment:
    - BACKEND_HOST=backend    
    - BACKEND_PORT=3000  
    ports:
      - "80:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - weather-network

networks:
  weather-network:
    driver: bridge
